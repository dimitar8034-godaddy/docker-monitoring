version: '3.3'

secrets:
  db_password:
    file: db_password.txt

services:
  productservice:
    build: product-service
    networks:
      - frontend
      - backend
    volumes:
      - "/home/dimitar/wired-brain/pipe:/hostpipe"
      - "./config:/config"
      - "./product-service/src:/code"
    secrets:
      - db_password

  web:
    build: nginx
    networks:
      - frontend
    ports:
      - "80:80"
    #  - "95.142.154.69:9330:9330"
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]

  db:
    image: mysql
    command: "--init-file /data/application/init.sql --default-authentication-plugin=mysql_native_password"
    networks:
      - backend
    volumes:
      - "./db/init.sql:/data/application/init.sql"
      - "db-volume:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=password

  mysql80-exporter:
    image: prom/mysqld-exporter:latest
    container_name: db_mysqld_exporter
    environment:
      - DATA_SOURCE_NAME=exporter:exporterpassword@(db:3306)/
    ports:
      - "9104:9104"
    volumes:
      - ./mysql-exporter/.my.cnf:/root/.my.cnf
    networks:
      - backend
    command: --collect.global_status
    links:
      - db
    depends_on:
      - db

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - backend
      - frontend

  prometheus:
    build: prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - frontend
      - backend
    links:
      - cadvisor
      - alertmanager
    depends_on:
      - cadvisor

  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - backend

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config.ini:/etc/grafana/config.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - frontend
      - backend

volumes:
  db-volume:
  prometheus_data: {}
  grafana_data: {}

networks:
  frontend:
  backend:


